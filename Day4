1..Swapping of two Numbers by 
a)Call By Value
b)Call By Reference

#include <stdio.h>
swap (int *, int *);
int main()
{
    int a, b;
    printf("\nEnter value of a & b: ");
    scanf("%d %d", &a, &b);
    printf("\nBefore Swapping:\n");
    printf("\na = %d\nb = %d\n", a, b);
    swap(&a, &b);
    printf("\nAfter Swapping:\n");
    printf("\na = %d\nb = %d", a, b);
    return 0;
}
swap (int *x, int *y)
{
    int temp;
    temp = *x;
    *x = *y;
    *y = temp;
}

#include <stdio.h>
swap (int, int);
main()
{
    int a, b;
    printf("\nEnter value of a & b: ");
    scanf("%d %d", &a, &b);
    printf("\nBefore Swapping:\n");
    printf("\na = %d\n\nb = %d\n", a, b);
    swap(a, b);
     
}
swap (int x, int y)
{
    int temp;
    temp = x;
    x = y;
    y = temp;
    printf("\nAfter Swapping:\n");
    printf("\na = %d\n\nb = %d", x,y);   
}

2.Find duplicates in an array

import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
       int[] arr={2,3,1,2,3};
       Arrays.sort(arr);
       for(int i=0;i<arr.length-1;i++){
           if(arr[i]==arr[i+1]){
               System.out.println(arr[i]);
           }
       }
    }
}

3.Union of two sorted arrays:
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
       int[] arr1={2, 2, 3, 4, 5};
       int[] arr2= {1, 1, 2, 3, 4};
        HashSet<Integer> s = new HashSet<>();
       for(int i=0;i<arr1.length;i++){
           s.add(arr1[i]);
       }
         for(int j=0;j<arr2.length;j++){
             s.add(arr2[j]);
             }
             System.out.println(s.toString());
         }
           }
